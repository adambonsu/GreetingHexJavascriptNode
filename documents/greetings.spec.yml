openapi: 3.0.0
info:
  title: Greeting List
  description: List of greetings
  version: 1.0.0

servers:
  - url: http://api.adambonsu.io/v1
    description: Production server
  - url: http://staging-api.adambonsu.io/v1
    description: Staging Server
  - url: http://localhost:8080/v1
    description: Developer Server
tags:
  - name: Greetings
    description: Greeting operations
paths:
  /greetings:
    get:
      summary: Get all greetings
      tags:
        - Greetings
      security:
        - bearerAuth: []
      operationId: getAllGreetings
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
          $ref: "#/components/responses/SuccessGetAllGreetings"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
          $ref: "#/components/responses/UnauthorizedError"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
          $ref: "#/components/responses/InternalServerError"
    post:
      summary: Create a greeting
      tags:
        - Greetings
      security:
        - bearerAuth: []
      operationId: createGreeting
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewGreeting"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
          $ref: "#/components/responses/SuccessGetGreetingById"
        400:
          description: Bad request
          content:
            application/json:
              schema:
          $ref: "#/components/responses/BadRequestError"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
          $ref: "#/components/responses/UnauthorizedError"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
          $ref: "#/components/responses/InternalServerError"
  /greeting/{id}:
    get:
      summary: Get greeting by id
      tags:
        - Greetings
      security:
        - bearerAuth: []
      operationId: getGreetingById
      parameters:
        - name: id
          in: path
          description: Unique identifier of the greeting
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
          $ref: "#/components/responses/SuccessGetGreetingById"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
          $ref: "#/components/responses/UnauthorizedError"
        404:
          description: Not found
          content:
            application/json:
              schema:
          $ref: "#/components/responses/NotFoundError"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
          $ref: "#/components/responses/InternalServerError"
    put:
      summary: Update greeting by id
      tags:
        - Greetings
      security:
        - bearerAuth: []
      operationId: updateGreetingById
      parameters:
        - name: id
          in: path
          description: ID of greeting to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewGreeting"
      responses:
        202:
          description: Accepted
          content:
            application/json:
              schema:
                $ref: "#/components/responses/Accepted"
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/responses/BadRequestError"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
          $ref: "#/components/responses/UnauthorizedError"
        404:
          description: Not found
          content:
            application/json:
              schema:
          $ref: "#/components/responses/NotFoundError"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
          $ref: "#/components/responses/InternalServerError"
    delete:
      summary: Delete greeting by id
      tags:
        - Greetings
      security:
        - bearerAuth: []
      operationId: deleteGreetingById
      parameters:
        - name: id
          in: path
          description: ID of greeting to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        202:
          description: Accepted
          content:
            application/json:
              schema:
          $ref: "#/components/responses/Accepted"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
          $ref: "#/components/responses/UnauthorizedError"
        404:
          description: Not found
          content:
            application/json:
              schema:
          $ref: "#/components/responses/NotFoundError"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
          $ref: "#/components/responses/InternalServerError"
components:
  responses:
    Accepted:
      description: Ok
      content:
        application/json:
          schema:
            type: object
            $ref: "#/components/schemas/Greeting"
    SuccessGetAllGreetings:
      description: Ok
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Greeting"
    SuccessGetGreetingById:
      description: Ok
      content:
        application/json:
          schema:
            type: object
            $ref: "#/components/schemas/Greeting"
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UnauthorizedError"
    BadRequestError:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BadRequestError"
    NotFoundError:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NotFoundError"
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InternalServerError"

  schemas:
    NewGreeting:
      type: object
      properties:
        message:
          type: string
          description: "The greeting message"
          example: "Hej"
        createdAt:
          type: string
          format: date-time
          example: "2022-01-01T00:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2022-01-02T20:30:45Z"
        languageFamily:
          type: string
          example: "Nordic"
        language:
          type: string
          example: "Swedish"
        formal:
          type: boolean
          description: "Indicates if the greeting is formal or informal"
          example: false
        information:
          type: string
          example: "Scandinavian languages often use variations of 'Hej' to greet others"
      required:
        - message
    Greeting:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        message:
          type: string
          example: "Hej"
        createdAt:
          type: string
          format: date-time
          example: "2022-01-01T00:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2022-01-02T20:30:45Z"
        languageFamily:
          type: string
          example: "Nordic"
        language:
          type: string
          example: "Swedish"
        formal:
          type: boolean
          example: false
        information:
          type: string
          example: "Scandinavian languages often use variations of 'Hej' to greet others"
      required:
        - id
        - message
    BadRequestError:
      required:
        - statusCode
        - message
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          example: 400
        message:
          type: string
          example: "Bad request"
    UnauthorizedError:
      required:
        - statusCode
        - message
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          example: 401
        message:
          type: string
          example: "Unauthorized"
    NotFoundError:
      required:
        - statusCode
        - message
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          example: 404
        message:
          type: string
          example: "Not found"
    InternalServerError:
      required:
        - statusCode
        - message
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          example: 500
        message:
          type: string
          example: "Internal server error"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: >
        A JSON Web Token (JWT) is required for authentication. The token should be included 
        in the Authorization header using the Bearer scheme. The JWT must be obtained from 
        the authentication endpoint (not described in this API) and should contain the necessary 
        claims to authorize access to the API endpoints. The token is expected to be signed and 
        may include expiration information. Example: 'Authorization: Bearer <token>'
